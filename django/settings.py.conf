import os

DEBUG = {% if staging %}True{% else %}False{% endif %}
TEMPLATE_DEBUG = DEBUG

ADMINS = (
    ('{{ user }}', '{{ email }}'),
)

MANAGERS = ADMINS
SITE_ROOT = os.path.dirname(os.path.realpath(__file__))

MEDIA_ROOT = '%s/media/' % (SITE_ROOT)
MEDIA_DOMAIN = 'http://{{ site_name }}.{{ site_domain }}'
MEDIA_URL = '%s/media/' % (MEDIA_DOMAIN)

# for s3
#MEDIA_DOMAIN = 'http://media.{{ site_name }}.{{ site_domain }}'
#MEDIA_URL = '%s/' % (MEDIA_DOMAIN)

ADMIN_MEDIA_PREFIX = '/static/admin/'

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    '%s/static/' % (SITE_ROOT),
)

CACHE_BACKEND = 'memcached://localhost:11211/'
CACHE_KEY_PREFIX = '{{ site_name }}'
CACHE_MIDDLEWARE_KEY_PREFIX = CACHE_KEY_PREFIX
CACHE_MIDDLEWARE_SECONDS = 60

SITE_NAME = '{{ site_name }}.{{ site_domain }}'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST'       : '',
        'PORT'       : '',
        'NAME'       : '{{ site_name }}_main',
        'USER'       : 'postgres',
        'PASSWORD'   : ''
    }
}

TIME_ZONE = 'America/Chicago'
LANGUAGE_CODE = 'en-us'
USE_I18N = True
SITE_ID = 1
SECRET_KEY = '{{ secret_key }}'
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.load_template_source',
    'django.template.loaders.app_directories.load_template_source',
)

TEMPLATE_CONTEXT_PROCESSORS = (
    'django.core.context_processors.auth',
    'django.core.context_processors.debug',
    'django.core.context_processors.media',
    'django.core.context_processors.static',
    'django.contrib.messages.context_processors.messages',
    'django.core.context_processors.request'
)

MIDDLEWARE_CLASSES = (
    'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
)

ROOT_URLCONF = '{{ site_name }}.urls'

TEMPLATE_DIRS = (
    '%s/templates/' % (SITE_ROOT),
)

#AUTH_PROFILE_MODULE = 'site_profiles.userprofile'

#EMAIL_USE_TLS = True
#EMAIL_HOST = 'smtp.gmail.com'
#EMAIL_HOST_USER = '{{ site_email }}'
#EMAIL_HOST_PASSWORD = '{{ site_email_password }}'
#EMAIL_PORT = 587
#DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# contact app
CONTACT_FROM_EMAIL = '{{ site_email }}'

# use django-storages boto s3 backend
#DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'

# settings required for boto/storages
AWS_ACCESS_KEY_ID = ''
AWS_SECRET_ACCESS_KEY = ''
AWS_STORAGE_BUCKET_NAME = 'media.{{ site_name }}.{{ site_domain }}'

# overrides
AWS_S3_CUSTOM_DOMAIN = 'media.{{ site_name }}.{{ site_domain }}'
AWS_S3_SECURE_URLS = False

# google analytics
ANALYTICS = 'UA-xxxxxx-1'

# akismet spam filter
AKISMET_KEY = ''
AKISMET_URL = 'http://{{ site_name }}.{{ site_domain }}'

# taggit settings
FORCE_LOWERCASE_TAGS = True

# huey queue settings
HUEY_CONFIG = {
    'QUEUE': 'huey.backends.redis_backend.RedisQueue',
    'RESULT_STORE': 'huey.backends.redis_backend.RedisDataStore',
    'TASK_STORE': 'huey.backends.redis_backend.RedisDataStore',
    'PERIODIC': True,
    'THREADS': 4,
    'LOGFILE': os.path.abspath(os.path.join(SITE_ROOT, '../logs/huey.log'))
    'LOGLEVEL': logging.INFO,
}

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.admin',
    'django.contrib.comments',
    'django.contrib.contenttypes',
    'django.contrib.flatpages',
    'django.contrib.markup',
    'django.contrib.messages',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    #'south',
    #'huey.djhuey',
)
